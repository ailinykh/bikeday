import { randomUUID } from "crypto";
import { PrismaClient } from "@prisma/client";
import { H3Event, getHeaders } from "h3";
import { TelegramMessage } from "~/types/telegram";

const prisma = new PrismaClient();

export const handleStart = async (
  message: TelegramMessage,
  event: H3Event,
) => {
  const password =
    message.text?.split(" ")[1] || randomUUID();
  const headers = getHeaders(event);
  await prisma.oneTimePassword.create({
    data: {
      context: message.from.id.toString(),
      password,
      provider: "telegram",
      ipAddress: headers["x-forwarded-for"] || "",
      userAgent: "",
    },
  });

  const user = await prisma.user.findFirst({
    where: {
      telegramId: message.from.id.toString(),
    },
  });

  if (user) {
    // User already exists
    const host =
      headers["x-forwarded-host"] ||
      headers["x-forwarded-server"] ||
      headers["host"];
    // const port = headers["x-forwarded-port"]
    //   ? ":" + headers["x-forwarded-port"]
    //   : "";
    const text = [
      "‚úÖ –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:",
      "",
      `http://${host}/api/session/authorize?code=${password}`,
    ];
    return {
      method: "sendMessage",
      chat_id: message.chat.id,
      text: text.join("\n"),
      disable_web_page_preview: true,
    };
  }

  const text = [
    "üëãüèª –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ <b>–í–µ–ª–æ–¥–µ–Ω—å</b>!",
    "",
    '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "üîë –í–æ–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞" –Ω–∏–∂–µ üëáüèª',
  ];
  return {
    method: "sendMessage",
    chat_id: message.chat.id,
    text: text.join("\n"),
    parse_mode: "HTML",
    reply_markup: {
      keyboard: [
        [
          {
            text: "üîë –í–æ–π—Ç–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞",
            request_contact: true,
          },
        ],
      ],
      one_time_keyboard: true,
    },
  };
};
